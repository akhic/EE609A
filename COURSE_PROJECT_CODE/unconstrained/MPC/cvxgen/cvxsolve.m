% Produced by CVXGEN, 2011-12-13 16:59:00 -0800.
% CVXGEN is Copyright (C) 2006-2011 Jacob Mattingley, jem@cvxgen.com.
% The code in this file is Copyright (C) 2006-2011 Jacob Mattingley.
% CVXGEN, or solvers produced by CVXGEN, cannot be used for commercial
% applications without prior written permission from Jacob Mattingley.

% Filename: cvxsolve.m.
% Description: Solution file, via cvx, for use with sample.m.

function [vars, status] = cvxsolve(params, settings)

S = params.S;
Sigma = params.Sigma;
av = params.av;
az = params.az;
kappa = params.kappa;
lambda = params.lambda;
r_bar = params.r_bar;
rtm1 = params.rtm1;
rtp1 = params.rtp1;
sh = params.sh;
vtm1 = params.vtm1;
x_constraint = params.x_constraint;
yt = params.yt;
ytm1 = params.ytm1;
ztm1 = params.ztm1;
ztp1 = params.ztp1;

cvx_begin
  % Caution: automatically generated by cvxgen. May be incorrect.
  variable v(30, 1);
  variable z(30, 1);

  minimize(sum(v) + sh'*max( - (z + v), 0) + kappa'*abs(v) + quad_form(v, S) + lambda*quad_form(z + v, Sigma) + rtp1*sum(square(ztp1 - diag(r_bar)*(z + v) + yt)) + rtm1*sum(square(z - diag(r_bar)*(ztm1 + vtm1) + ytm1)));
  subject to
    az*z + av*v == x_constraint;
cvx_end

vars.v = v;
vars.z = z;
status.cvx_status = cvx_status;

% Provide a drop-in replacement for csolve.
status.optval = cvx_optval;
status.converged = strcmp(cvx_status, 'Solved');
